#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    #flavor = "balanced";
    flavor = "hold-preferred";
    quick-tap-ms = <300>;
};

&lt {
    #flavor = "balanced";
    flavor = "hold-preferred";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            quick-tap-ms = <300>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W      &kp E     &kp R             &kp T                                                   &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S      &kp D     &kp F             &kp G                                                   &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z      &kp X      &kp C     &kp V             &kp B                                                   &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH
&kp LCTRL  &kp LSHFT  &kp LALT  &lt 3 LANGUAGE_2  &kp SPACE  &lt 5 LANG1      &lt_to_layer_0 2 BACKSPACE  &lt 1 ENTER                             &mt RIGHT_CONTROL ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW_NUM {
            bindings = <
&kp TAB            &kp N7  &kp N8        &kp N9        &mt ASTERISK EQUAL                                &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F10       &kp RIGHT_ALT  &kp TAB
&trans             &kp N4  &kp N5        &kp N6        &mt PLUS MINUS                                    &kp PAGE_UP           &kp HOME               &kp UP_ARROW  &kp END        &kp COLON
&mt LEFT_SHIFT N0  &kp N1  &kp NUMBER_2  &kp NUMBER_3  &mt COMMA DOT                                     &kp PAGE_DOWN         &kp LEFT_ARROW         &kp DOWN      &kp RIGHT      &mt RIGHT_SHIFT SLASH
&trans             &trans  &trans        &kp LEFT_ALT  &trans              &kp LEFT_GUI      &kp DELETE  &trans                                                                    &trans
            >;
        };

        ARROW_SIGN {
            bindings = <
&kp LS(EXCL)   &kp LS(AT)          &kp LS(POUND)    &kp LS(DLLR)                 &kp LS(PRCNT)                                      &kp LC(W)          &kp LC(R)     &kp LC(T)         &kp LC(LS(T))  &mt PLUS EQUAL
&kp LS(CARET)  &kp LS(AMPS)        &kp LS(STAR)     &kp LS(LPAR)                 &kp LS(RPAR)                                       &kp LC(PAGE_UP)    &kp LC(HOME)  &kp LA(UP_ARROW)  &kp LC(END)    &mt UNDER MINUS
&trans         &mt PIPE BACKSLASH  &mt TILDE GRAVE  &mt LEFT_BRACE LEFT_BRACKET  &mt RIGHT_BRACE RIGHT_BRACKET                      &kp LC(PAGE_DOWN)  &kp LA(LEFT)  &kp LA(DOWN)      &kp LA(RIGHT)  &mt DOUBLE_QUOTES SINGLE_QUOTE
&trans         &trans              &trans           &trans                       &trans                         &trans      &trans  &trans                                                            &kp LG(L)
            >;
        };

        FUNCTION {
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5                       &kp N6         &kp N7    &kp N8        &kp N9     &kp N0
&trans  &kp F2  &kp F3  &kp F4  &kp F5                       &kp PAGE_UP    &kp HOME  &kp UP_ARROW  &kp END    &trans
&trans  &kp F7  &kp F8  &kp F9  &kp F10                      &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans   &trans      &trans  &trans                                            &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans    &trans    &trans                        &trans  &trans    &trans    &trans    &trans
&trans  &trans  &mkp MB2  &mkp MB1  &mo 5                         &trans  &mkp MB1  &mkp MB3  &mkp MB2  &mo 5
&trans  &trans  &trans    &trans    &mkp MB3                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans    &trans    &trans    &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &kp LA(F4)  &kp LA(LC(F5))                                &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans                                        &trans  &trans  &trans  &trans  &kp LG(LC(RIGHT))
&trans  &trans  &trans  &trans      &kp LS(LG(RIGHT))                             &trans  &trans  &trans  &trans  &kp LG(LC(RIGHT))
&trans  &trans  &trans  &trans      &trans             &trans      &kp BACKSPACE  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans                      &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans                      &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
